<section>
   <h2>Contexts: Loaders</h2>
   <p>Loaders are used by the context to load new template content when needed.  For
   example when you use the "extends" tag or the "render" tag.  Loaders are stored
   on the context inside an array.  When loading a template the loaders are searched
   from the first element of the array to the last until a match is found.</p>

   <p>To add a loader onto the list you can call the <tt>#add_loader</tt> method.</p>

   {{ ruby_example "partials/reference/examples/context-loaders.cadenza" }}

   <p>To load the content of a file using the loaders you can call either the
   <tt>#load_source</tt> or <tt>#load_source!</tt> method on the context with the
   name of the template you want to load.  The bang version of the method will 
   raise an exception if the given template could not be loaded.</p>

   {{ ruby_example "partials/reference/examples/context-loaders2.cadenza" }}

   <p>To load the parsed content of a file using the loader you can call either the
   <tt>#load_template</tt> or <tt>#load_template!</tt> in the same fashion as the
   <tt>#load_source</tt> methods.  These will return an AST if the template was 
   successfully loaded.</p>

   {{ ruby_example "partials/reference/examples/context-loaders3.cadenza" }}

   <p>Cadenza includes the following loaders:</p>

   <dl class='parameters'>
      <dt>Cadenza::FilesystemLoader</dt>
      <dd>Loads templates directly off of the filesystem from a specified 
      directory.</dd>

      <dt>Cadenza::ZipLoader (TODO: not yet written)</dt>
      <dd>Loads templates from within a specified zip file.  To use this the 
      <tt>rubyzip</tt> gem is also required.</dd>
   </dl>
</section>
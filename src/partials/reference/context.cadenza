<section>
   <h2>Contexts</h2>
   <p>Contexts are managed by the <tt>Cadenza::Context</tt> class contain all 
   the variable information used when rendering the template, including:</p>

   <ul>
      <li>Variables</li>
      <li>Functional Variables</li>
      <li>Filters</li>
      <li>Blocks</li>
      <li>Loaders</li>
   </ul>

   <p>Cadenza includes a constant named <tt>Cadenza::BaseContext</tt> which was 
   intended, as a convention, to be cloned each time you want to render a 
   template.  Of course, for maximum control, you do not have to do this.</p>

   <p>The purpose of this convention is to allow other developers to mix in their 
   own filters, blocks, loaders, etc. to provide more power to your templates.  
   For example a gem which mixes Cadenza and Ruby on Rails would likely define a
   number of Rails specific filters, variables, etc.</p>
</section>
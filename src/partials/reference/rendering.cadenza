<section>
   <h2>Rendering</h2>
   <p>Rendering is the process of converting an AST to an output template using
   an instance of <tt>Cadenza::Context</tt>.  The renderer included with Cadenza
   is <tt>Cadenza::TextRenderer</tt> which renders the AST to a text document
   (other renderers may, for example, render to a JSON file or other interesting
   targets).</p>

   <p>Renderers must be instantiated with an IO object used for writing output
   to.  This IO object should already be opened and ready for writing.</p>

   {{ ruby_example "partials/reference/examples/rendering.cadenza" }}

   <p>Once constructed the object can render an AST by calling the <tt>#render</tt>
   method with the AST and context.</p>

   {{ ruby_example "partials/reference/examples/rendering2.cadenza" }}

   <p>To facilitate template inheritance an array of <tt>Cadenza::BlockNode</tt>
   objects can be passed.</p>

   {{ ruby_example "partials/reference/examples/rendering3.cadenza" }}

   <p><tt>Cadenza::TextRenderer</tt> also features a class level shorthand to
   render a given AST and context to a string which will be returned</p>

   {{ ruby_example "partials/reference/examples/rendering4.cadenza" }}
</section>